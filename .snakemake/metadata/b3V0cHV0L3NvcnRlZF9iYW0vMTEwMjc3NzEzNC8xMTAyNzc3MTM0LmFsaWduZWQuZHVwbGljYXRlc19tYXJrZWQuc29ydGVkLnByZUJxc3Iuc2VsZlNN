{"version": null, "code": "gAMoQxJ0AGQBfA58EWQCjQMBAGQAUwBxAChYBQAAAGlucHV0cQFYBgAAAG91dHB1dHECWAYAAABwYXJhbXNxA1gJAAAAd2lsZGNhcmRzcQRYBwAAAHRocmVhZHNxBVgJAAAAcmVzb3VyY2VzcQZYAwAAAGxvZ3EHWAcAAAB2ZXJzaW9ucQhYBAAAAHJ1bGVxCVgJAAAAY29uZGFfZW52cQpYDQAAAGNvbnRhaW5lcl9pbWdxC1gQAAAAc2luZ3VsYXJpdHlfYXJnc3EMWA8AAAB1c2Vfc2luZ3VsYXJpdHlxDVgLAAAAZW52X21vZHVsZXNxDlgMAAAAYmVuY2hfcmVjb3JkcQ9YBQAAAGpvYmlkcRBYCAAAAGlzX3NoZWxscRFYDwAAAGJlbmNoX2l0ZXJhdGlvbnESWA8AAABjbGVhbnVwX3NjcmlwdHNxE1gKAAAAc2hhZG93X2RpcnEUWA0AAABlZGl0X25vdGVib29rcRV0cRZdcRcoTlgYCAAACgltb2R1bGUgbG9hZCBSLzMuNS4zIGphdmEvMS44LjBfMjExIHB5dGhvbi8zLjcuMyBwaWNhcmQvMi4yMi4zIHZlcmlmeUJhbUlELzIwMTQtMDItMTMKICAgICAgICAKICAgICAgICAjIFVEUGF0aCwgTWVhblBhdGgsIGFuZCBCZWRQYXRoIGFyZSBmdW5jdGlvbmFsIGJ1dCBkZXByZWNpYXRlZCBhYm5kIGhhdmUgYmVlbiByZXBsYWNlZCB3aXRoIC0tU1ZEUHJlZml4IHdoZXJlIHlvdSBwcm92aWRlIHRoZSBwcmVmaXggZm9yIGFsbCB0aHJlZSBmaWxlcwogICAgICAgICMgRmlyc3Qgcm93IGFyZSB0aGUga2V5cyAoZS5nLiwgU0VRX1NNLCBSRywgRlJFRU1JWCksIHNlY29uZCByb3cgYXJlIHRoZSBhc3NvY2lhdGVkIHZhbHVlcwogICAgICAgICMgdXNlZCB0byByZWFkIGZyb20gdGhlIHNlbGZTTSBmaWxlIGFuZCBjYWxjdWxhdGUgY29udGFtaW5hdGlvbiwgd2hpY2ggZ2V0cyBwcmludGVkIG91dAogICAgICAgIAoJc2V0IC1lCiAgICAgICAgIyBjcmVhdGVzIGEgIm91dHB1dF9wcmVmaXgiLnNlbGZTTSBmaWxlLCBhIFRTViBmaWxlIHdpdGggMiByb3dzLCAxOSBjb2x1bW5zLgogICAgICAgICMgbmVlZCB0byBkb3dubG9hZCBhbmQgY29tcGlsZSB0aGUgbmV3IHZlcnNpb24gb2YgVmVyaWZ5QmFtSUQgdmVyaWZ5QmFtSUQyIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL0dyaWZmYW4vVmVyaWZ5QmFtSUQKICAgICAgICB7VmVyaWZ5QmFtSUR9ICAgICAgICAgLS1WZXJib3NlICAgICAgICAgLS1OdW1QQyA0ICAgICAgICAgLS1PdXRwdXQgb3V0cHV0L3NvcnRlZF9iYW0ve3dpbGRjYXJkcy5zYW1wbGV9L3t3aWxkY2FyZHMuc2FtcGxlfS5hbGlnbmVkLmR1cGxpY2F0ZXNfbWFya2VkLnNvcnRlZC5wcmVCcXNyICAgICAgICAgLS1CYW1GaWxlIHtpbnB1dH0gICAgICAgICAtLVJlZmVyZW5jZSB7UkVGX0ZBU1RBfSAgICAgICAgIC0tU1ZEUHJlZml4IHtDT05UQU1JTkFUSU9OX1NJVEVTX1BSRUZJWH0gICAgICAgICAtLURpc2FibGVTYW5pdHlDaGVjayAgICAgICAgIAogICAgICAgIDE+L2Rldi9udWxsCgogICAgICAgIHB5dGhvbjMgPDxDT0RFCmltcG9ydCBjc3YKaW1wb3J0IHN5cwp3aXRoIG9wZW4oJ3tvdXRwdXR9JykgYXMgc2VsZlNNOgogICAgcmVhZGVyID0gY3N2LkRpY3RSZWFkZXIoc2VsZlNNLCBkZWxpbWl0ZXI9JwknKQogICAgaSA9IDAKICAgIGZvciByb3cgaW4gcmVhZGVyOgogICAgICAgIGlmIGZsb2F0KHJvd1siRlJFRUxLMCJdKT09MCBhbmQgZmxvYXQocm93WyJGUkVFTEsxIl0pPT0wOgogICAgICAgICAgICAjIGEgemVybyB2YWx1ZSBmb3IgdGhlIGxpa2VsaWhvb2RzIGltcGxpZXMgbm8gZGF0YS4gVGhpcyB1c3VhbGx5IGluZGljYXRlcyBhIHByb2JsZW0gcmF0aGVyIHRoYW4gYSByZWFsIGV2ZW50LgogICAgICAgICAgICAjIGlmIHRoZSBiYW0gaXNuJ3QgcmVhbGx5IGVtcHR5LCB0aGlzIGlzIHByb2JhYmx5IGR1ZSB0byB0aGUgdXNlIG9mIGEgaW5jb21wYXRpYmxlIHJlZmVyZW5jZSBidWlsZCBiZXR3ZWVuCiAgICAgICAgICAgICMgdmNmIGFuZCBiYW0uCiAgICAgICAgICAgc3lzLnN0ZGVyci53cml0ZSgiRm91bmQgemVybyBsaWtlbGlob29kcy4gQmFtIGlzIGVpdGhlciB2ZXJ5LXZlcnkgc2hhbGxvdywgb3IgYWxpZ25lZCB0byB0aGUgd3JvbmcgcmVmZXJlbmNlIChyZWxhdGl2ZSB0byB0aGUgdmNmKS4iKQogICAgICAgICAgIHN5cy5leGl0KDEpCiAgICAgICAgcHJpbnQoZmxvYXQocm93WyJGUkVFTUlYIl0pLzAuNzUpCiAgICAgICAgaSA9IGkgKyAxCiAgICAgICAgIyB0aGVyZSBzaG91bGQgYmUgZXhhY3RseSBvbmUgcm93LCBhbmQgaWYgdGhpcyBpc24ndCB0aGUgY2FzZSB0aGUgZm9ybWF0IG9mIHRoZSBvdXRwdXQgaXMgdW5leHBlY3RlZGx5IGRpZmZlcmVudAogICAgICAgICMgYW5kIHRoZSByZXN1bHRzIGFyZSBub3QgcmVsaWFibGUuCiAgICAgICAgaWYgaSAhPSAxOgogICAgICAgICAgICBzeXMuc3RkZXJyLndyaXRlKCJGb3VuZCAlZCByb3dzIGluIC5zZWxmU00gZmlsZS4gV2FzIGV4cGVjdGluZyBleGFjdGx5IDEuIFRoaXMgaXMgYW4gZXJyb3IiJShpKSkKICAgICAgICAgICAgc3lzLmV4aXQoMikKQ09ERSAgICAgCglxGGgPaBKGcRllWAUAAABzaGVsbHEahXEbdHEcLg==", "rule": "check_contamination", "input": ["output/sorted_bam/1102777134/1102777134.aligned.duplicates_marked.sorted.bam"], "log": [], "params": [], "shellcmd": "\n\tmodule load R/3.5.3 java/1.8.0_211 python/3.7.3 picard/2.22.3 verifyBamID/2014-02-13\n        \n        # UDPath, MeanPath, and BedPath are functional but depreciated abnd have been replaced with --SVDPrefix where you provide the prefix for all three files\n        # First row are the keys (e.g., SEQ_SM, RG, FREEMIX), second row are the associated values\n        # used to read from the selfSM file and calculate contamination, which gets printed out\n        \n\tset -e\n        # creates a \"output_prefix\".selfSM file, a TSV file with 2 rows, 19 columns.\n        # need to download and compile the new version of VerifyBamID verifyBamID2 from https://github.com/Griffan/VerifyBamID\n        /sc/arion/projects/MMAAAS/src/VerifyBamID/bin/VerifyBamID         --Verbose         --NumPC 4         --Output output/sorted_bam/1102777134/1102777134.aligned.duplicates_marked.sorted.preBqsr         --BamFile output/sorted_bam/1102777134/1102777134.aligned.duplicates_marked.sorted.bam         --Reference /sc/arion/projects/MMAAAS/src/gatk-resources/hg38_20201116/hg38/v0/resources-broad-hg38-v0-Homo_sapiens_assembly38.fasta         --SVDPrefix /sc/arion/projects/MMAAAS/src/gatk-resources/hg38_20201116/hg38/v0/references-hg38-v0-Homo_sapiens_assembly38.contam         --DisableSanityCheck         \n        1>/dev/null\n\n        python3 <<CODE\nimport csv\nimport sys\nwith open('output/sorted_bam/1102777134/1102777134.aligned.duplicates_marked.sorted.preBqsr.selfSM') as selfSM:\n    reader = csv.DictReader(selfSM, delimiter='\t')\n    i = 0\n    for row in reader:\n        if float(row[\"FREELK0\"])==0 and float(row[\"FREELK1\"])==0:\n            # a zero value for the likelihoods implies no data. This usually indicates a problem rather than a real event.\n            # if the bam isn't really empty, this is probably due to the use of a incompatible reference build between\n            # vcf and bam.\n           sys.stderr.write(\"Found zero likelihoods. Bam is either very-very shallow, or aligned to the wrong reference (relative to the vcf).\")\n           sys.exit(1)\n        print(float(row[\"FREEMIX\"])/0.75)\n        i = i + 1\n        # there should be exactly one row, and if this isn't the case the format of the output is unexpectedly different\n        # and the results are not reliable.\n        if i != 1:\n            sys.stderr.write(\"Found %d rows in .selfSM file. Was expecting exactly 1. This is an error\"%(i))\n            sys.exit(2)\nCODE     \n\t", "incomplete": false, "starttime": 1642503677.016271, "endtime": 1642505038.1446626, "job_hash": 8766254761881, "conda_env": null, "container_img_url": null}