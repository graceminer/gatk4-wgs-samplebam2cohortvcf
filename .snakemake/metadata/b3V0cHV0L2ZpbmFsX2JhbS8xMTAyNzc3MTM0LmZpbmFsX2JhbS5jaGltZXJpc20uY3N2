{"version": null, "code": "gAMoQxJ0AGQBfA58EWQCjQMBAGQAUwBxAChYBQAAAGlucHV0cQFYBgAAAG91dHB1dHECWAYAAABwYXJhbXNxA1gJAAAAd2lsZGNhcmRzcQRYBwAAAHRocmVhZHNxBVgJAAAAcmVzb3VyY2VzcQZYAwAAAGxvZ3EHWAcAAAB2ZXJzaW9ucQhYBAAAAHJ1bGVxCVgJAAAAY29uZGFfZW52cQpYDQAAAGNvbnRhaW5lcl9pbWdxC1gQAAAAc2luZ3VsYXJpdHlfYXJnc3EMWA8AAAB1c2Vfc2luZ3VsYXJpdHlxDVgLAAAAZW52X21vZHVsZXNxDlgMAAAAYmVuY2hfcmVjb3JkcQ9YBQAAAGpvYmlkcRBYCAAAAGlzX3NoZWxscRFYDwAAAGJlbmNoX2l0ZXJhdGlvbnESWA8AAABjbGVhbnVwX3NjcmlwdHNxE1gKAAAAc2hhZG93X2RpcnEUWA0AAABlZGl0X25vdGVib29rcRV0cRZdcRcoTliKAwAACiAgICAgICAgbW9kdWxlIGxvYWQgUi8zLjUuMyAgZ2F0ay80LjIuMC4wIGphdmEvMS44LjBfMjExIHB5dGhvbi8zLjcuMyBwaWNhcmQvMi4yMi4zCgogICAgICAgIHNldCAtbyBwaXBlZmFpbAogICAgICAgIHNldCAtZQoKICAgICAgICBncmVwIC1BIDEgUEVSQ0VOVF9EVVBMSUNBVElPTiBvdXRwdXQvZHVwbGljYXRlc19tYXJrZWQve3dpbGRjYXJkcy5zYW1wbGV9L3t3aWxkY2FyZHMuc2FtcGxlfS5hbGlnbmVkLnVuc29ydGVkLmR1cGxpY2F0ZXNfbWFya2VkLmR1cGxpY2F0ZV9tZXRyaWNzID4ge291dHB1dC5kdXBsaWNhdGlvbn0KICAgICAgICBncmVwIC1BIDMgUENUX0NISU1FUkFTIHtpbnB1dC5jaGltZXJpc21fbWV0cmljc30gfCBncmVwIC12IE9GX1BBSVIgPiB7b3V0cHV0LmNoaW1lcmlzbX0KCiAgICAgICAgcHl0aG9uIDw8Q09ERQoKaW1wb3J0IGNzdgp3aXRoIG9wZW4oJ3tvdXRwdXQuZHVwbGljYXRpb259JykgYXMgZHVwZmlsZToKICByZWFkZXIgPSBjc3YuRGljdFJlYWRlcihkdXBmaWxlLCBkZWxpbWl0ZXI9JwknKQogIGZvciByb3cgaW4gcmVhZGVyOgogICAgd2l0aCBvcGVuKCJkdXBsaWNhdGlvbl92YWx1ZS50eHQiLCJ3IikgYXMgZmlsZToKICAgICAgZmlsZS53cml0ZShyb3dbJ1BFUkNFTlRfRFVQTElDQVRJT04nXSkKICAgICAgZmlsZS5jbG9zZSgpCgp3aXRoIG9wZW4oJ3tvdXRwdXQuY2hpbWVyaXNtfScpIGFzIGNoaW1maWxlOgogIHJlYWRlciA9IGNzdi5EaWN0UmVhZGVyKGNoaW1maWxlLCBkZWxpbWl0ZXI9JwknKQogIGZvciByb3cgaW4gcmVhZGVyOgogICAgd2l0aCBvcGVuKCJjaGltZXJpc21fdmFsdWUudHh0IiwidyIpIGFzIGZpbGU6CiAgICAgIGZpbGUud3JpdGUocm93WydQQ1RfQ0hJTUVSQVMnXSkKICAgICAgZmlsZS5jbG9zZSgpCkNPREUKCiAgICAgICAgcRhoD2gShnEZZVgFAAAAc2hlbGxxGoVxG3RxHC4=", "rule": "check_prevalidation", "input": ["output/final_bam/1102777134.final_bam.collect_aggregated_metrics.alignment_summary_metrics"], "log": [], "params": [], "shellcmd": "\n        module load R/3.5.3  gatk/4.2.0.0 java/1.8.0_211 python/3.7.3 picard/2.22.3\n\n        set -o pipefail\n        set -e\n\n        grep -A 1 PERCENT_DUPLICATION output/duplicates_marked/1102777134/1102777134.aligned.unsorted.duplicates_marked.duplicate_metrics > output/final_bam/1102777134.final_bam.duplication.csv\n        grep -A 3 PCT_CHIMERAS output/final_bam/1102777134.final_bam.collect_aggregated_metrics.alignment_summary_metrics | grep -v OF_PAIR > output/final_bam/1102777134.final_bam.chimerism.csv\n\n        python <<CODE\n\nimport csv\nwith open('output/final_bam/1102777134.final_bam.duplication.csv') as dupfile:\n  reader = csv.DictReader(dupfile, delimiter='\t')\n  for row in reader:\n    with open(\"duplication_value.txt\",\"w\") as file:\n      file.write(row['PERCENT_DUPLICATION'])\n      file.close()\n\nwith open('output/final_bam/1102777134.final_bam.chimerism.csv') as chimfile:\n  reader = csv.DictReader(chimfile, delimiter='\t')\n  for row in reader:\n    with open(\"chimerism_value.txt\",\"w\") as file:\n      file.write(row['PCT_CHIMERAS'])\n      file.close()\nCODE\n\n        ", "incomplete": false, "starttime": 1642657984.275931, "endtime": 1642657985.598672, "job_hash": -9223363268674292220, "conda_env": null, "container_img_url": null}